// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tcp_msg.cmd.common.proto

#ifndef PROTOBUF_tcp_5fmsg_2ecmd_2ecommon_2eproto__INCLUDED
#define PROTOBUF_tcp_5fmsg_2ecmd_2ecommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_tcp_5fmsg_2ecmd_2ecommon_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCommonHeaderImpl();
void InitDefaultsCommonHeader();
inline void InitDefaults() {
  InitDefaultsCommonHeader();
}
}  // namespace protobuf_tcp_5fmsg_2ecmd_2ecommon_2eproto
namespace tcp_msg {
class CommonHeader;
class CommonHeaderDefaultTypeInternal;
extern CommonHeaderDefaultTypeInternal _CommonHeader_default_instance_;
}  // namespace tcp_msg
namespace tcp_msg {

enum CmdType {
  START_UPDATE = 0,
  FINISH_UPDATE = 1,
  CmdType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CmdType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CmdType_IsValid(int value);
const CmdType CmdType_MIN = START_UPDATE;
const CmdType CmdType_MAX = FINISH_UPDATE;
const int CmdType_ARRAYSIZE = CmdType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CmdType_descriptor();
inline const ::std::string& CmdType_Name(CmdType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CmdType_descriptor(), value);
}
inline bool CmdType_Parse(
    const ::std::string& name, CmdType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CmdType>(
    CmdType_descriptor(), name, value);
}
// ===================================================================

class CommonHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tcp_msg.CommonHeader) */ {
 public:
  CommonHeader();
  virtual ~CommonHeader();

  CommonHeader(const CommonHeader& from);

  inline CommonHeader& operator=(const CommonHeader& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CommonHeader(CommonHeader&& from) noexcept
    : CommonHeader() {
    *this = ::std::move(from);
  }

  inline CommonHeader& operator=(CommonHeader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CommonHeader& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CommonHeader* internal_default_instance() {
    return reinterpret_cast<const CommonHeader*>(
               &_CommonHeader_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CommonHeader* other);
  friend void swap(CommonHeader& a, CommonHeader& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CommonHeader* New() const PROTOBUF_FINAL { return New(NULL); }

  CommonHeader* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CommonHeader& from);
  void MergeFrom(const CommonHeader& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CommonHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .tcp_msg.CmdType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::tcp_msg::CmdType type() const;
  void set_type(::tcp_msg::CmdType value);

  // @@protoc_insertion_point(class_scope:tcp_msg.CommonHeader)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  mutable int _cached_size_;
  friend struct ::protobuf_tcp_5fmsg_2ecmd_2ecommon_2eproto::TableStruct;
  friend void ::protobuf_tcp_5fmsg_2ecmd_2ecommon_2eproto::InitDefaultsCommonHeaderImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CommonHeader

// .tcp_msg.CmdType type = 1;
inline void CommonHeader::clear_type() {
  type_ = 0;
}
inline ::tcp_msg::CmdType CommonHeader::type() const {
  // @@protoc_insertion_point(field_get:tcp_msg.CommonHeader.type)
  return static_cast< ::tcp_msg::CmdType >(type_);
}
inline void CommonHeader::set_type(::tcp_msg::CmdType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:tcp_msg.CommonHeader.type)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace tcp_msg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::tcp_msg::CmdType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::tcp_msg::CmdType>() {
  return ::tcp_msg::CmdType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tcp_5fmsg_2ecmd_2ecommon_2eproto__INCLUDED
