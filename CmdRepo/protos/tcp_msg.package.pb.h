// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tcp_msg.package.proto

#ifndef PROTOBUF_tcp_5fmsg_2epackage_2eproto__INCLUDED
#define PROTOBUF_tcp_5fmsg_2epackage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_tcp_5fmsg_2epackage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsProtoPackageImpl();
void InitDefaultsProtoPackage();
inline void InitDefaults() {
  InitDefaultsProtoPackage();
}
}  // namespace protobuf_tcp_5fmsg_2epackage_2eproto
namespace tcp_msg {
class ProtoPackage;
class ProtoPackageDefaultTypeInternal;
extern ProtoPackageDefaultTypeInternal _ProtoPackage_default_instance_;
}  // namespace tcp_msg
namespace tcp_msg {

// ===================================================================

class ProtoPackage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tcp_msg.ProtoPackage) */ {
 public:
  ProtoPackage();
  virtual ~ProtoPackage();

  ProtoPackage(const ProtoPackage& from);

  inline ProtoPackage& operator=(const ProtoPackage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoPackage(ProtoPackage&& from) noexcept
    : ProtoPackage() {
    *this = ::std::move(from);
  }

  inline ProtoPackage& operator=(ProtoPackage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoPackage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoPackage* internal_default_instance() {
    return reinterpret_cast<const ProtoPackage*>(
               &_ProtoPackage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ProtoPackage* other);
  friend void swap(ProtoPackage& a, ProtoPackage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoPackage* New() const PROTOBUF_FINAL { return New(NULL); }

  ProtoPackage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtoPackage& from);
  void MergeFrom(const ProtoPackage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtoPackage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string type_name = 1;
  void clear_type_name();
  static const int kTypeNameFieldNumber = 1;
  const ::std::string& type_name() const;
  void set_type_name(const ::std::string& value);
  #if LANG_CXX11
  void set_type_name(::std::string&& value);
  #endif
  void set_type_name(const char* value);
  void set_type_name(const char* value, size_t size);
  ::std::string* mutable_type_name();
  ::std::string* release_type_name();
  void set_allocated_type_name(::std::string* type_name);

  // bytes data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:tcp_msg.ProtoPackage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr type_name_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  mutable int _cached_size_;
  friend struct ::protobuf_tcp_5fmsg_2epackage_2eproto::TableStruct;
  friend void ::protobuf_tcp_5fmsg_2epackage_2eproto::InitDefaultsProtoPackageImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtoPackage

// string type_name = 1;
inline void ProtoPackage::clear_type_name() {
  type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoPackage::type_name() const {
  // @@protoc_insertion_point(field_get:tcp_msg.ProtoPackage.type_name)
  return type_name_.GetNoArena();
}
inline void ProtoPackage::set_type_name(const ::std::string& value) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tcp_msg.ProtoPackage.type_name)
}
#if LANG_CXX11
inline void ProtoPackage::set_type_name(::std::string&& value) {
  
  type_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tcp_msg.ProtoPackage.type_name)
}
#endif
inline void ProtoPackage::set_type_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tcp_msg.ProtoPackage.type_name)
}
inline void ProtoPackage::set_type_name(const char* value, size_t size) {
  
  type_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tcp_msg.ProtoPackage.type_name)
}
inline ::std::string* ProtoPackage::mutable_type_name() {
  
  // @@protoc_insertion_point(field_mutable:tcp_msg.ProtoPackage.type_name)
  return type_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoPackage::release_type_name() {
  // @@protoc_insertion_point(field_release:tcp_msg.ProtoPackage.type_name)
  
  return type_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPackage::set_allocated_type_name(::std::string* type_name) {
  if (type_name != NULL) {
    
  } else {
    
  }
  type_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_name);
  // @@protoc_insertion_point(field_set_allocated:tcp_msg.ProtoPackage.type_name)
}

// bytes data = 2;
inline void ProtoPackage::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoPackage::data() const {
  // @@protoc_insertion_point(field_get:tcp_msg.ProtoPackage.data)
  return data_.GetNoArena();
}
inline void ProtoPackage::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tcp_msg.ProtoPackage.data)
}
#if LANG_CXX11
inline void ProtoPackage::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tcp_msg.ProtoPackage.data)
}
#endif
inline void ProtoPackage::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tcp_msg.ProtoPackage.data)
}
inline void ProtoPackage::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tcp_msg.ProtoPackage.data)
}
inline ::std::string* ProtoPackage::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:tcp_msg.ProtoPackage.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoPackage::release_data() {
  // @@protoc_insertion_point(field_release:tcp_msg.ProtoPackage.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoPackage::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tcp_msg.ProtoPackage.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace tcp_msg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_tcp_5fmsg_2epackage_2eproto__INCLUDED
