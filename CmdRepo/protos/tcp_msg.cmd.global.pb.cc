// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tcp_msg.cmd.global.proto

#include "tcp_msg.cmd.global.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace tcp_msg {
namespace global {
class IdentifyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IdentifyRequest>
      _instance;
} _IdentifyRequest_default_instance_;
class IdentifyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IdentifyResponse>
      _instance;
} _IdentifyResponse_default_instance_;
class StartUpdateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartUpdateRequest>
      _instance;
} _StartUpdateRequest_default_instance_;
}  // namespace global
}  // namespace tcp_msg
namespace protobuf_tcp_5fmsg_2ecmd_2eglobal_2eproto {
void InitDefaultsIdentifyRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tcp_5fmsg_2ecmd_2ecommon_2eproto::InitDefaultsCommonHeader();
  {
    void* ptr = &::tcp_msg::global::_IdentifyRequest_default_instance_;
    new (ptr) ::tcp_msg::global::IdentifyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tcp_msg::global::IdentifyRequest::InitAsDefaultInstance();
}

void InitDefaultsIdentifyRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIdentifyRequestImpl);
}

void InitDefaultsIdentifyResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tcp_5fmsg_2ecmd_2ecommon_2eproto::InitDefaultsCommonHeader();
  {
    void* ptr = &::tcp_msg::global::_IdentifyResponse_default_instance_;
    new (ptr) ::tcp_msg::global::IdentifyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tcp_msg::global::IdentifyResponse::InitAsDefaultInstance();
}

void InitDefaultsIdentifyResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIdentifyResponseImpl);
}

void InitDefaultsStartUpdateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tcp_5fmsg_2ecmd_2ecommon_2eproto::InitDefaultsCommonHeader();
  {
    void* ptr = &::tcp_msg::global::_StartUpdateRequest_default_instance_;
    new (ptr) ::tcp_msg::global::StartUpdateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tcp_msg::global::StartUpdateRequest::InitAsDefaultInstance();
}

void InitDefaultsStartUpdateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStartUpdateRequestImpl);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tcp_msg::global::IdentifyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tcp_msg::global::IdentifyRequest, header_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tcp_msg::global::IdentifyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tcp_msg::global::IdentifyResponse, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tcp_msg::global::IdentifyResponse, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tcp_msg::global::StartUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tcp_msg::global::StartUpdateRequest, header_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tcp_msg::global::IdentifyRequest)},
  { 6, -1, sizeof(::tcp_msg::global::IdentifyResponse)},
  { 13, -1, sizeof(::tcp_msg::global::StartUpdateRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tcp_msg::global::_IdentifyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tcp_msg::global::_IdentifyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tcp_msg::global::_StartUpdateRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tcp_msg.cmd.global.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030tcp_msg.cmd.global.proto\022\016tcp_msg.glob"
      "al\032\030tcp_msg.cmd.common.proto\"8\n\017Identify"
      "Request\022%\n\006header\030\001 \001(\0132\025.tcp_msg.Common"
      "Header\"E\n\020IdentifyResponse\022%\n\006header\030\001 \001"
      "(\0132\025.tcp_msg.CommonHeader\022\n\n\002id\030\002 \001(\005\";\n"
      "\022StartUpdateRequest\022%\n\006header\030\001 \001(\0132\025.tc"
      "p_msg.CommonHeaderb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 266);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tcp_msg.cmd.global.proto", &protobuf_RegisterTypes);
  ::protobuf_tcp_5fmsg_2ecmd_2ecommon_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tcp_5fmsg_2ecmd_2eglobal_2eproto
namespace tcp_msg {
namespace global {

// ===================================================================

void IdentifyRequest::InitAsDefaultInstance() {
  ::tcp_msg::global::_IdentifyRequest_default_instance_._instance.get_mutable()->header_ = const_cast< ::tcp_msg::CommonHeader*>(
      ::tcp_msg::CommonHeader::internal_default_instance());
}
void IdentifyRequest::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdentifyRequest::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdentifyRequest::IdentifyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tcp_5fmsg_2ecmd_2eglobal_2eproto::InitDefaultsIdentifyRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tcp_msg.global.IdentifyRequest)
}
IdentifyRequest::IdentifyRequest(const IdentifyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::tcp_msg::CommonHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tcp_msg.global.IdentifyRequest)
}

void IdentifyRequest::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

IdentifyRequest::~IdentifyRequest() {
  // @@protoc_insertion_point(destructor:tcp_msg.global.IdentifyRequest)
  SharedDtor();
}

void IdentifyRequest::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void IdentifyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IdentifyRequest::descriptor() {
  ::protobuf_tcp_5fmsg_2ecmd_2eglobal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tcp_5fmsg_2ecmd_2eglobal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdentifyRequest& IdentifyRequest::default_instance() {
  ::protobuf_tcp_5fmsg_2ecmd_2eglobal_2eproto::InitDefaultsIdentifyRequest();
  return *internal_default_instance();
}

IdentifyRequest* IdentifyRequest::New(::google::protobuf::Arena* arena) const {
  IdentifyRequest* n = new IdentifyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IdentifyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tcp_msg.global.IdentifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool IdentifyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tcp_msg.global.IdentifyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tcp_msg.CommonHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tcp_msg.global.IdentifyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tcp_msg.global.IdentifyRequest)
  return false;
#undef DO_
}

void IdentifyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tcp_msg.global.IdentifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tcp_msg.CommonHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tcp_msg.global.IdentifyRequest)
}

::google::protobuf::uint8* IdentifyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tcp_msg.global.IdentifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tcp_msg.CommonHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tcp_msg.global.IdentifyRequest)
  return target;
}

size_t IdentifyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tcp_msg.global.IdentifyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tcp_msg.CommonHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IdentifyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tcp_msg.global.IdentifyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IdentifyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdentifyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tcp_msg.global.IdentifyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tcp_msg.global.IdentifyRequest)
    MergeFrom(*source);
  }
}

void IdentifyRequest::MergeFrom(const IdentifyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tcp_msg.global.IdentifyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::tcp_msg::CommonHeader::MergeFrom(from.header());
  }
}

void IdentifyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tcp_msg.global.IdentifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdentifyRequest::CopyFrom(const IdentifyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tcp_msg.global.IdentifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdentifyRequest::IsInitialized() const {
  return true;
}

void IdentifyRequest::Swap(IdentifyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdentifyRequest::InternalSwap(IdentifyRequest* other) {
  using std::swap;
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IdentifyRequest::GetMetadata() const {
  protobuf_tcp_5fmsg_2ecmd_2eglobal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tcp_5fmsg_2ecmd_2eglobal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IdentifyResponse::InitAsDefaultInstance() {
  ::tcp_msg::global::_IdentifyResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::tcp_msg::CommonHeader*>(
      ::tcp_msg::CommonHeader::internal_default_instance());
}
void IdentifyResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdentifyResponse::kHeaderFieldNumber;
const int IdentifyResponse::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdentifyResponse::IdentifyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tcp_5fmsg_2ecmd_2eglobal_2eproto::InitDefaultsIdentifyResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tcp_msg.global.IdentifyResponse)
}
IdentifyResponse::IdentifyResponse(const IdentifyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::tcp_msg::CommonHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:tcp_msg.global.IdentifyResponse)
}

void IdentifyResponse::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&header_)) + sizeof(id_));
  _cached_size_ = 0;
}

IdentifyResponse::~IdentifyResponse() {
  // @@protoc_insertion_point(destructor:tcp_msg.global.IdentifyResponse)
  SharedDtor();
}

void IdentifyResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void IdentifyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IdentifyResponse::descriptor() {
  ::protobuf_tcp_5fmsg_2ecmd_2eglobal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tcp_5fmsg_2ecmd_2eglobal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdentifyResponse& IdentifyResponse::default_instance() {
  ::protobuf_tcp_5fmsg_2ecmd_2eglobal_2eproto::InitDefaultsIdentifyResponse();
  return *internal_default_instance();
}

IdentifyResponse* IdentifyResponse::New(::google::protobuf::Arena* arena) const {
  IdentifyResponse* n = new IdentifyResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IdentifyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tcp_msg.global.IdentifyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  id_ = 0;
  _internal_metadata_.Clear();
}

bool IdentifyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tcp_msg.global.IdentifyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tcp_msg.CommonHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tcp_msg.global.IdentifyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tcp_msg.global.IdentifyResponse)
  return false;
#undef DO_
}

void IdentifyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tcp_msg.global.IdentifyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tcp_msg.CommonHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tcp_msg.global.IdentifyResponse)
}

::google::protobuf::uint8* IdentifyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tcp_msg.global.IdentifyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tcp_msg.CommonHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tcp_msg.global.IdentifyResponse)
  return target;
}

size_t IdentifyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tcp_msg.global.IdentifyResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tcp_msg.CommonHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IdentifyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tcp_msg.global.IdentifyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IdentifyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdentifyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tcp_msg.global.IdentifyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tcp_msg.global.IdentifyResponse)
    MergeFrom(*source);
  }
}

void IdentifyResponse::MergeFrom(const IdentifyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tcp_msg.global.IdentifyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::tcp_msg::CommonHeader::MergeFrom(from.header());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void IdentifyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tcp_msg.global.IdentifyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdentifyResponse::CopyFrom(const IdentifyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tcp_msg.global.IdentifyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdentifyResponse::IsInitialized() const {
  return true;
}

void IdentifyResponse::Swap(IdentifyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdentifyResponse::InternalSwap(IdentifyResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IdentifyResponse::GetMetadata() const {
  protobuf_tcp_5fmsg_2ecmd_2eglobal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tcp_5fmsg_2ecmd_2eglobal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StartUpdateRequest::InitAsDefaultInstance() {
  ::tcp_msg::global::_StartUpdateRequest_default_instance_._instance.get_mutable()->header_ = const_cast< ::tcp_msg::CommonHeader*>(
      ::tcp_msg::CommonHeader::internal_default_instance());
}
void StartUpdateRequest::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartUpdateRequest::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartUpdateRequest::StartUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tcp_5fmsg_2ecmd_2eglobal_2eproto::InitDefaultsStartUpdateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tcp_msg.global.StartUpdateRequest)
}
StartUpdateRequest::StartUpdateRequest(const StartUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::tcp_msg::CommonHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tcp_msg.global.StartUpdateRequest)
}

void StartUpdateRequest::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

StartUpdateRequest::~StartUpdateRequest() {
  // @@protoc_insertion_point(destructor:tcp_msg.global.StartUpdateRequest)
  SharedDtor();
}

void StartUpdateRequest::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void StartUpdateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartUpdateRequest::descriptor() {
  ::protobuf_tcp_5fmsg_2ecmd_2eglobal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tcp_5fmsg_2ecmd_2eglobal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StartUpdateRequest& StartUpdateRequest::default_instance() {
  ::protobuf_tcp_5fmsg_2ecmd_2eglobal_2eproto::InitDefaultsStartUpdateRequest();
  return *internal_default_instance();
}

StartUpdateRequest* StartUpdateRequest::New(::google::protobuf::Arena* arena) const {
  StartUpdateRequest* n = new StartUpdateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tcp_msg.global.StartUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool StartUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tcp_msg.global.StartUpdateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tcp_msg.CommonHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tcp_msg.global.StartUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tcp_msg.global.StartUpdateRequest)
  return false;
#undef DO_
}

void StartUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tcp_msg.global.StartUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tcp_msg.CommonHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tcp_msg.global.StartUpdateRequest)
}

::google::protobuf::uint8* StartUpdateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tcp_msg.global.StartUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tcp_msg.CommonHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tcp_msg.global.StartUpdateRequest)
  return target;
}

size_t StartUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tcp_msg.global.StartUpdateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tcp_msg.CommonHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tcp_msg.global.StartUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StartUpdateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StartUpdateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tcp_msg.global.StartUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tcp_msg.global.StartUpdateRequest)
    MergeFrom(*source);
  }
}

void StartUpdateRequest::MergeFrom(const StartUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tcp_msg.global.StartUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::tcp_msg::CommonHeader::MergeFrom(from.header());
  }
}

void StartUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tcp_msg.global.StartUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartUpdateRequest::CopyFrom(const StartUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tcp_msg.global.StartUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartUpdateRequest::IsInitialized() const {
  return true;
}

void StartUpdateRequest::Swap(StartUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartUpdateRequest::InternalSwap(StartUpdateRequest* other) {
  using std::swap;
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartUpdateRequest::GetMetadata() const {
  protobuf_tcp_5fmsg_2ecmd_2eglobal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tcp_5fmsg_2ecmd_2eglobal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace global
}  // namespace tcp_msg

// @@protoc_insertion_point(global_scope)
